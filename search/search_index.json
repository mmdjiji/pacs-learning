{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 Picture archiving and communication system (PACS) \u00b6 A picture archiving and communication system (PACS) is a medical imaging technology which provides economical storage and convenient access to images from multiple modalities (source machine types). Electronic images and reports are transmitted digitally via PACS; this eliminates the need to manually file, retrieve, or transport film jackets, the folders used to store and protect X-ray film. The universal format for PACS image storage and transfer is DICOM (Digital Imaging and Communications in Medicine). Non-image data, such as scanned documents, may be incorporated using consumer industry standard formats like PDF (Portable Document Format), once encapsulated in DICOM. A PACS consists of four major components: The imaging modalities such as X-ray plain film (PF), computed tomography (CT) and magnetic resonance imaging (MRI), a secured network for the transmission of patient information, workstations for interpreting and reviewing images, and archives for the storage and retrieval of images and reports. Combined with available and emerging web technology, PACS has the ability to deliver timely and efficient access to images, interpretations, and related data. PACS reduces the physical and time barriers associated with traditional film-based image retrieval, distribution, and display. Radiological information system (RIS) \u00b6 A radiological information system (RIS) is the core system for the electronic management of imaging departments. The major functions of the RIS can include patient scheduling, resource management, examination performance tracking, reporting, results distribution, and procedure billing. RIS complements HIS (hospital information systems) and PACS (picture archiving and communication system), and is critical to efficient workflow to radiology practices. Hospital information system (HIS) \u00b6 A hospital information system (HIS) is an element of health informatics that focuses mainly on the administrational needs of hospitals. In many implementations, a HIS is a comprehensive, integrated information system designed to manage all the aspects of a hospital's operation, such as medical, administrative, financial, and legal issues and the corresponding processing of services. Hospital information system is also known as hospital management software (HMS) or hospital management system. Weasis \u00b6 Weasis is a free medical DICOM viewer used in healthcare by hospitals, health networks, multicenter research trials, and patients. Official GitHub repo: https://github.com/nroduit/Weasis Build Plugins: https://nroduit.github.io/en/basics/customize/build-plugins/ dcm4che \u00b6 Official GitHub repo: https://github.com/dcm4che/dcm4che Official Application: https://github.com/dcm4che/dcm4chee-arc-light","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#picture-archiving-and-communication-system-pacs","text":"A picture archiving and communication system (PACS) is a medical imaging technology which provides economical storage and convenient access to images from multiple modalities (source machine types). Electronic images and reports are transmitted digitally via PACS; this eliminates the need to manually file, retrieve, or transport film jackets, the folders used to store and protect X-ray film. The universal format for PACS image storage and transfer is DICOM (Digital Imaging and Communications in Medicine). Non-image data, such as scanned documents, may be incorporated using consumer industry standard formats like PDF (Portable Document Format), once encapsulated in DICOM. A PACS consists of four major components: The imaging modalities such as X-ray plain film (PF), computed tomography (CT) and magnetic resonance imaging (MRI), a secured network for the transmission of patient information, workstations for interpreting and reviewing images, and archives for the storage and retrieval of images and reports. Combined with available and emerging web technology, PACS has the ability to deliver timely and efficient access to images, interpretations, and related data. PACS reduces the physical and time barriers associated with traditional film-based image retrieval, distribution, and display.","title":"Picture archiving and communication system (PACS)"},{"location":"#radiological-information-system-ris","text":"A radiological information system (RIS) is the core system for the electronic management of imaging departments. The major functions of the RIS can include patient scheduling, resource management, examination performance tracking, reporting, results distribution, and procedure billing. RIS complements HIS (hospital information systems) and PACS (picture archiving and communication system), and is critical to efficient workflow to radiology practices.","title":"Radiological information system (RIS)"},{"location":"#hospital-information-system-his","text":"A hospital information system (HIS) is an element of health informatics that focuses mainly on the administrational needs of hospitals. In many implementations, a HIS is a comprehensive, integrated information system designed to manage all the aspects of a hospital's operation, such as medical, administrative, financial, and legal issues and the corresponding processing of services. Hospital information system is also known as hospital management software (HMS) or hospital management system.","title":"Hospital information system (HIS)"},{"location":"#weasis","text":"Weasis is a free medical DICOM viewer used in healthcare by hospitals, health networks, multicenter research trials, and patients. Official GitHub repo: https://github.com/nroduit/Weasis Build Plugins: https://nroduit.github.io/en/basics/customize/build-plugins/","title":"Weasis"},{"location":"#dcm4che","text":"Official GitHub repo: https://github.com/dcm4che/dcm4che Official Application: https://github.com/dcm4che/dcm4chee-arc-light","title":"dcm4che"},{"location":"dcm4che/docker/","text":"Deploy dcm4chee-arc-light on docker \u00b6 dcm4che/dcm4chee-arc-light | Running on Docker dcm4che/dcm4chee-arc-light is a DICOM Archive J2EE application. Let's deploy it on docker. Note Run minimum set of archive services on a single host Use docker-compose \u00b6 Create docker-compose.yml : version: \"3\" services: ldap: image: dcm4che/slapd-dcm4chee:2.6.0-26.0 logging: driver: json-file options: max-size: \"10m\" ports: - \"389:389\" env_file: docker-compose.env volumes: - /var/local/dcm4chee-arc/ldap:/var/lib/openldap/openldap-data - /var/local/dcm4chee-arc/slapd.d:/etc/openldap/slapd.d db: image: dcm4che/postgres-dcm4chee:14.2-26 logging: driver: json-file options: max-size: \"10m\" ports: - \"5432:5432\" env_file: docker-compose.env volumes: - /etc/localtime:/etc/localtime:ro - /etc/timezone:/etc/timezone:ro - /var/local/dcm4chee-arc/db:/var/lib/postgresql/data arc: image: dcm4che/dcm4chee-arc-psql:5.26.0 logging: driver: json-file options: max-size: \"10m\" ports: - \"8080:8080\" - \"8443:8443\" - \"9990:9990\" - \"9993:9993\" - \"11112:11112\" - \"2762:2762\" - \"2575:2575\" - \"12575:12575\" env_file: docker-compose.env environment: WILDFLY_CHOWN: /opt/wildfly/standalone /storage WILDFLY_WAIT_FOR: ldap:389 db:5432 depends_on: - ldap - db volumes: - /etc/localtime:/etc/localtime:ro - /etc/timezone:/etc/timezone:ro - /var/local/dcm4chee-arc/wildfly:/opt/wildfly/standalone - /var/local/dcm4chee-arc/storage:/storage Create docker-compose.env : STORAGE_DIR = /storage/fs1 POSTGRES_DB = pacsdb POSTGRES_USER = pacs POSTGRES_PASSWORD = pacs Run the following command: $ sudo docker-compose -p dcm4chee up -d When everything okay, you can visit http://<docker-host>:8080/dcm4chee-arc/ui2 , for me it is http://10.0.0.61:8080/dcm4chee-arc/ui2 . Web Service URLs \u00b6 Archive UI: http://<docker-host>:8080/dcm4chee-arc/ui2 - if secured, login with Name Password Role(s) root changeit user root auditlog ADMINISTRATOR all roles specified by client realm-management admin changeit user admin user changeit user Wildfly Administration Console: http://<docker-host>:9990 , login with Username: root , Password: changeit . DICOM QIDO-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM STOW-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM WADO-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM WADO-URI: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/wado IHE XDS-I Retrieve Imaging Document Set: http://<docker-host>:8080/dcm4chee-arc/xdsi/ImagingDocumentSource Daily Operation \u00b6 Deploy: $ sudo docker-compose -p dcm4chee up -d Stop: $ sudo docker-compose -p dcm4chee stop Start: $ sudo docker-compose -p dcm4chee start Stop and delete: $ sudo docker-compose -p dcm4chee down Probably Exceptions \u00b6 Error response from daemon: driver failed programming external connectivity on endpoint dcm4chee-arc-1 ( 62ca0417c9a8b09df3a5108e83df6a10b19cf858f68770edaa5eadbbec113ea5 ) : Error starting userland proxy: listen tcp4 0 .0.0.0:9993: bind: address already in use This because tcp4 9993 port is already in use, I used netstat -alnt | grep 9993 to find the reason, and finally found that I used Zerotier and it uses tcp4 9993 . Just delete the - \"9993:9993\" in docker-compose.yml . (The only thing affects is you cannot visit the Administration Console from another docker stack without reverse proxy)","title":"Docker"},{"location":"dcm4che/docker/#deploy-dcm4chee-arc-light-on-docker","text":"dcm4che/dcm4chee-arc-light | Running on Docker dcm4che/dcm4chee-arc-light is a DICOM Archive J2EE application. Let's deploy it on docker. Note Run minimum set of archive services on a single host","title":"Deploy dcm4chee-arc-light on docker"},{"location":"dcm4che/docker/#use-docker-compose","text":"Create docker-compose.yml : version: \"3\" services: ldap: image: dcm4che/slapd-dcm4chee:2.6.0-26.0 logging: driver: json-file options: max-size: \"10m\" ports: - \"389:389\" env_file: docker-compose.env volumes: - /var/local/dcm4chee-arc/ldap:/var/lib/openldap/openldap-data - /var/local/dcm4chee-arc/slapd.d:/etc/openldap/slapd.d db: image: dcm4che/postgres-dcm4chee:14.2-26 logging: driver: json-file options: max-size: \"10m\" ports: - \"5432:5432\" env_file: docker-compose.env volumes: - /etc/localtime:/etc/localtime:ro - /etc/timezone:/etc/timezone:ro - /var/local/dcm4chee-arc/db:/var/lib/postgresql/data arc: image: dcm4che/dcm4chee-arc-psql:5.26.0 logging: driver: json-file options: max-size: \"10m\" ports: - \"8080:8080\" - \"8443:8443\" - \"9990:9990\" - \"9993:9993\" - \"11112:11112\" - \"2762:2762\" - \"2575:2575\" - \"12575:12575\" env_file: docker-compose.env environment: WILDFLY_CHOWN: /opt/wildfly/standalone /storage WILDFLY_WAIT_FOR: ldap:389 db:5432 depends_on: - ldap - db volumes: - /etc/localtime:/etc/localtime:ro - /etc/timezone:/etc/timezone:ro - /var/local/dcm4chee-arc/wildfly:/opt/wildfly/standalone - /var/local/dcm4chee-arc/storage:/storage Create docker-compose.env : STORAGE_DIR = /storage/fs1 POSTGRES_DB = pacsdb POSTGRES_USER = pacs POSTGRES_PASSWORD = pacs Run the following command: $ sudo docker-compose -p dcm4chee up -d When everything okay, you can visit http://<docker-host>:8080/dcm4chee-arc/ui2 , for me it is http://10.0.0.61:8080/dcm4chee-arc/ui2 .","title":"Use docker-compose"},{"location":"dcm4che/docker/#web-service-urls","text":"Archive UI: http://<docker-host>:8080/dcm4chee-arc/ui2 - if secured, login with Name Password Role(s) root changeit user root auditlog ADMINISTRATOR all roles specified by client realm-management admin changeit user admin user changeit user Wildfly Administration Console: http://<docker-host>:9990 , login with Username: root , Password: changeit . DICOM QIDO-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM STOW-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM WADO-RS Base URL: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/rs DICOM WADO-URI: http://<docker-host>:8080/dcm4chee-arc/aets/DCM4CHEE/wado IHE XDS-I Retrieve Imaging Document Set: http://<docker-host>:8080/dcm4chee-arc/xdsi/ImagingDocumentSource","title":"Web Service URLs"},{"location":"dcm4che/docker/#daily-operation","text":"Deploy: $ sudo docker-compose -p dcm4chee up -d Stop: $ sudo docker-compose -p dcm4chee stop Start: $ sudo docker-compose -p dcm4chee start Stop and delete: $ sudo docker-compose -p dcm4chee down","title":"Daily Operation"},{"location":"dcm4che/docker/#probably-exceptions","text":"Error response from daemon: driver failed programming external connectivity on endpoint dcm4chee-arc-1 ( 62ca0417c9a8b09df3a5108e83df6a10b19cf858f68770edaa5eadbbec113ea5 ) : Error starting userland proxy: listen tcp4 0 .0.0.0:9993: bind: address already in use This because tcp4 9993 port is already in use, I used netstat -alnt | grep 9993 to find the reason, and finally found that I used Zerotier and it uses tcp4 9993 . Just delete the - \"9993:9993\" in docker-compose.yml . (The only thing affects is you cannot visit the Administration Console from another docker stack without reverse proxy)","title":"Probably Exceptions"},{"location":"dcm4che/introduction/","text":"dcm4che \u00b6 dcm4che/dcm4che | dcm4che/dcm4chee-arc-light dcm4che/dcm4che is a collection of open source applications and utilities for healthcare enterprises. These applications are developed in the Java programming language to improve performance and portability.","title":"Introduction"},{"location":"dcm4che/introduction/#dcm4che","text":"dcm4che/dcm4che | dcm4che/dcm4chee-arc-light dcm4che/dcm4che is a collection of open source applications and utilities for healthcare enterprises. These applications are developed in the Java programming language to improve performance and portability.","title":"dcm4che"},{"location":"weasis/build-plugins/","text":"Build Plugins \u00b6 Guide Document | Example: nroduit/weasis-isowriter List of plug-ins types \u00b6 Media viewer or editor (main central panel that implements ViewerPlugin or ImageViewerPlugin and the factory implements SeriesViewerFactory ) Toolbar associated with a viewer (implements Toolbar ) Tool associated with a viewer (right panel that implements DockableTool ) Data Explorer (data model implements DataExplorerModel and data view implements DataExplorerView , and the factory implements DataExplorerViewFactory ) Import data into an explorer (ex. ImportDicom and the factory implements DicomImportFactory ) Export data into an explorer (ex. ExportDicom and the factory implements DicomExportFactory ) DICOM editor or viewer for special modalities ( DicomSpecialElementFactory and SeriesViewerFactory ), see weasis-dicom-sr Media codec (implements Codec ) Preferences (implements PreferencesPageFactory ) UI aggregator. This is the application main user interface bundle. The maven artifact of this bundle must be defined in config.properties (ex. weasis.main.ui=weasis-base-ui) Install archetype \u00b6 $ git clone https://github.com/nroduit/Weasis.git $ cd Weasis/archetype $ mvn install If error, try to upgrade your JDK version. Maybe you can try to skip enforcer also: $ mvn clean install -Denforcer.skip = true Or continue build even if error: $ mvn clean install -Denforcer.fail = false Build plug-ins from Maven archetype \u00b6 $ mvn archetype:generate -DarchetypeCatalog = local If error as The desired archetype does not exist (org.weasis.samples:weasis-plugin-base-viewer-archetype:4.0.0-RC) , try to run mvn install in Weasis/ . Then run: $ mvn compile I met an error at the first compilation: [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.9.0:compile (default-compile) on project test: Compilation failure: Compilation failure: [ERROR] SampleToolFactory.java:[1,1] need class, interface, enum or record [ERROR] SampleToolFactory.java:[1,6] invalid token: '#' Then I found something that I cannot understand at the SampleToolFactory.java : set ( # = '#' ) After I delete it, everything is okay. Package \u00b6 When you want to package it into a jar file, run the following command: $ mvn package Then you will found target/test-1.0-SNAPSHOT.jar , copy it into app/plugins . Installation \u00b6 The file app/conf/ext-config.properties ( For me, the full path is C:\\Program Files\\Weasis\\app\\conf\\ext-config.properties ) must be adapted and plug-ins must be placed in the directory app/plugins , like this: felix.auto.start.85 = ${weasis.codebase.url}/plugins/test-1.0-SNAPSHOT.jar In the path, test-1.0-SNAPSHOT.jar is your file name with extension. Question Why we must do this to lock the filename or the installation path of my plugin jar file? Why the main program cannot load it automatically when found a jar file in the plugin folder?","title":"Build Plugins"},{"location":"weasis/build-plugins/#build-plugins","text":"Guide Document | Example: nroduit/weasis-isowriter","title":"Build Plugins"},{"location":"weasis/build-plugins/#list-of-plug-ins-types","text":"Media viewer or editor (main central panel that implements ViewerPlugin or ImageViewerPlugin and the factory implements SeriesViewerFactory ) Toolbar associated with a viewer (implements Toolbar ) Tool associated with a viewer (right panel that implements DockableTool ) Data Explorer (data model implements DataExplorerModel and data view implements DataExplorerView , and the factory implements DataExplorerViewFactory ) Import data into an explorer (ex. ImportDicom and the factory implements DicomImportFactory ) Export data into an explorer (ex. ExportDicom and the factory implements DicomExportFactory ) DICOM editor or viewer for special modalities ( DicomSpecialElementFactory and SeriesViewerFactory ), see weasis-dicom-sr Media codec (implements Codec ) Preferences (implements PreferencesPageFactory ) UI aggregator. This is the application main user interface bundle. The maven artifact of this bundle must be defined in config.properties (ex. weasis.main.ui=weasis-base-ui)","title":"List of plug-ins types"},{"location":"weasis/build-plugins/#install-archetype","text":"$ git clone https://github.com/nroduit/Weasis.git $ cd Weasis/archetype $ mvn install If error, try to upgrade your JDK version. Maybe you can try to skip enforcer also: $ mvn clean install -Denforcer.skip = true Or continue build even if error: $ mvn clean install -Denforcer.fail = false","title":"Install archetype"},{"location":"weasis/build-plugins/#build-plug-ins-from-maven-archetype","text":"$ mvn archetype:generate -DarchetypeCatalog = local If error as The desired archetype does not exist (org.weasis.samples:weasis-plugin-base-viewer-archetype:4.0.0-RC) , try to run mvn install in Weasis/ . Then run: $ mvn compile I met an error at the first compilation: [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.9.0:compile (default-compile) on project test: Compilation failure: Compilation failure: [ERROR] SampleToolFactory.java:[1,1] need class, interface, enum or record [ERROR] SampleToolFactory.java:[1,6] invalid token: '#' Then I found something that I cannot understand at the SampleToolFactory.java : set ( # = '#' ) After I delete it, everything is okay.","title":"Build plug-ins from Maven archetype"},{"location":"weasis/build-plugins/#package","text":"When you want to package it into a jar file, run the following command: $ mvn package Then you will found target/test-1.0-SNAPSHOT.jar , copy it into app/plugins .","title":"Package"},{"location":"weasis/build-plugins/#installation","text":"The file app/conf/ext-config.properties ( For me, the full path is C:\\Program Files\\Weasis\\app\\conf\\ext-config.properties ) must be adapted and plug-ins must be placed in the directory app/plugins , like this: felix.auto.start.85 = ${weasis.codebase.url}/plugins/test-1.0-SNAPSHOT.jar In the path, test-1.0-SNAPSHOT.jar is your file name with extension. Question Why we must do this to lock the filename or the installation path of my plugin jar file? Why the main program cannot load it automatically when found a jar file in the plugin folder?","title":"Installation"},{"location":"weasis/installation/","text":"Installation \u00b6 Preparation \u00b6 First, you need to download the installer. Here is the entrance for downloading. For example, my platform is Windows 10 x64 , so the following package is what I need: Note If the website is updated when you download, maybe the content you see is inconsistent with the above screenshot, which is normal. Please select the appropriate version to download. Setup \u00b6 After downloading, you will see an executable file. Double click it and then the following form you will be shown, just check the license and click the Install button: Then after a short waiting, the installation will be done, as the following form, you just need to click the Finish button: How to use \u00b6 Now it has been installed successfully. If you have a file with DCM extension like the following screenshot, double click it to open with weasis. Here is a possible situation after double clicking: Note If you cannot open it successfully, try to use Windows Search to find the Weasis main program, and set the default application for the DCM extension file.","title":"Installation"},{"location":"weasis/installation/#installation","text":"","title":"Installation"},{"location":"weasis/installation/#preparation","text":"First, you need to download the installer. Here is the entrance for downloading. For example, my platform is Windows 10 x64 , so the following package is what I need: Note If the website is updated when you download, maybe the content you see is inconsistent with the above screenshot, which is normal. Please select the appropriate version to download.","title":"Preparation"},{"location":"weasis/installation/#setup","text":"After downloading, you will see an executable file. Double click it and then the following form you will be shown, just check the license and click the Install button: Then after a short waiting, the installation will be done, as the following form, you just need to click the Finish button:","title":"Setup"},{"location":"weasis/installation/#how-to-use","text":"Now it has been installed successfully. If you have a file with DCM extension like the following screenshot, double click it to open with weasis. Here is a possible situation after double clicking: Note If you cannot open it successfully, try to use Windows Search to find the Weasis main program, and set the default application for the DCM extension file.","title":"How to use"}]}